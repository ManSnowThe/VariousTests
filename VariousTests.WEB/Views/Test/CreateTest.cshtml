@model VariousTests.WEB.Models.TestViewModel

@{
    ViewBag.Title = "CreateTest";
}

<hr />

<h2>Создать тест</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <div class="form-group">
        @Html.LabelFor(m => m.Name, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.Name, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.Name, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.Description, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.Description, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.Description, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.TopicId, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.DropDownListFor(m => m.TopicId, ViewBag.Topics as SelectList, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.TopicId, "", new { @class = "text-danger" })
        </div>
    </div>

    @*<div class="form-group" id="question">
        <div class="col-md-10">
            @Ajax.ActionLink("Добавить вопрос", "AddQuestion", "Test", new { id = Model.Id }, new AjaxOptions { UpdateTargetId = "question" })
        </div>
    </div>*@

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" class="btn btn-default" value="Создать" />
        </div>
    </div>
</div>
}